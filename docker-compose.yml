version: "3"
volumes:
  postgis-data:
  chaches-data:
  grafana-storage:
services:
#  ngnix-proxy:
#    image: nginx:latest
#    expose:
#      - "8080"
#    ports:
#      - "8080:8080"
#    depends_on:
#      - main
#      - grafana
#      - prometheus
#    networks:
#      - default
#    volumes:
#      - ./logs-ngnix:/var/log/nginx
#      - ${NGNIX_CONFIG}:/etc/nginx/conf.d/default.conf
#    restart: always
  main:
    image: main
    networks:
      - default
    volumes:
      - ./app-log:/app/app-log
      - ./config/docker-config.yaml:/app/config.yaml
    ports:
      - "8080:8080"
    depends_on:
      - banner-bd
      - chaches
    restart: on-failure
  banner-bd:
    image: postgres:16
    expose:
      - "5432"
    command: "postgres -c shared_preload_libraries='pg_stat_statements'"
    volumes:
      - postgis-data:/var/lib/postgresql
      - ./script:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
  chaches:
    image: "redis:alpine"
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - chaches-data:/data
    restart: always
#  prometheus:
#    image: prom/prometheus
#    expose:
#      - "9090"
#    volumes:
#      - ./config/prometheus:/etc/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--web.external-url=${PROMETHEUS_URL}'
#  grafana:
#    image: grafana/grafana
#    depends_on:
#      - prometheus
#    volumes:
#      - grafana-storage:/var/lib/grafana
#    environment:
#      - GF_SERVER_ROOT_URL=${GRAFANA_URL}
#    expose:
#      - "3000"
networks:
  default:
    driver: bridge
