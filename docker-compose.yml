version: "3"
volumes:
  postgis-data:
  chaches-data:
  grafana-storage:
services:
  nginx-proxy:
    image: nginx:latest
    expose:
      - "8081"
    ports:
      - "8081:8081"
    depends_on:
      - grafana
      - prometheus
    networks:
      - default
    volumes:
      - ./logs-nginx:/var/log/nginx
      - ${NGINX_CONFIG}:/etc/nginx/conf.d/default.conf
    restart: always
  banner:
    image: banner
    networks:
      - default
    volumes:
      - ./app-log:/app/app-log
      - ./config/docker-config.yaml:/config.yaml
    ports:
      - "8080:8080"
    environment:
      - CONFIG_PATH=/config.yaml
    depends_on:
      - banner-bd
      - chaches
    restart: on-failure
  cron-service:
    image: cron
    networks:
      - default
    volumes:
      - ./config/docker-config.yaml:/config.yaml
    environment:
      - CONFIG_PATH=/config.yaml
      - TASK_PERIOD=1800000
    depends_on:
      - banner-bd
    restart: on-failure
  banner-bd:
    image: postgres:16
    expose:
      - "5432"
    command: "postgres -c shared_preload_libraries='pg_stat_statements'"
    volumes:
      - postgis-data:/var/lib/postgresql
      - ./config/services/postgres.conf:/etc/postgresql/postgresql.conf
      - ./script:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
  chaches:
    image: "redis:alpine"
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - chaches-data:/data
    restart: always
  prometheus:
    image: prom/prometheus
    expose:
      - "9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=${PROMETHEUS_URL}'
  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=${GRAFANA_URL}
    expose:
      - "3000"
networks:
  default:
    driver: bridge
